{
  "scope": "aux4",
  "name": "repository",
  "version": "0.0.1",
  "description": "Simplified aux4 database",
  "tags": [
    "aux4",
    "database",
    "repository"
  ],
  "profiles": [
    {
      "name": "main",
      "commands": [
        {
          "name": "repository",
          "execute": [
            "profile:repository"
          ],
          "help": {
            "text": "Simplified aux4 database"
          }
        }
      ]
    },
    {
      "name": "repository",
      "commands": [
        {
          "name": "init",
          "private": true,
          "execute": [
            "sqlite3 ${db} \"SELECT name FROM sqlite_master WHERE type = 'table' and name = '${repository}'\" | grep -q ${repository} || cat ${packageDir}/sql/create.sql | sed 's/TABLE_NAME/${repository}/g' | sqlite3 ${db}"
          ],
          "help": {
            "text": "Initialize the aux4 repository",
            "variables": [
              {
                "name": "db",
                "text": "The database to initialize",
                "default": ".local.db"
              },
              {
                "name": "repository",
                "text": "The name of the repository to initialize",
                "arg": true
              }
            ]
          }
        },
        {
          "name": "write",
          "execute": [
            "aux4 repository init --db ${db} --repository ${repository}",
            "stdin:if(data) && echo '${data}' > /tmp/raw_input.json || cat > /tmp/raw_input.json",
            "jq -c . /tmp/raw_input.json > /tmp/input.json",
            "set:key=!if(id) && echo '${id}' || (jq -r '.id // empty' /tmp/input.json | grep -q . && jq -r '.id' /tmp/input.json) || uuidgen",
            "jq -c 'del(.id)' /tmp/input.json | sed -e 's/\"/\\\\\"/g' -e \"s/'/''/g\" > /tmp/data.json",
            "set:data=!cat /tmp/data.json",
            "set:metadata_escaped=!echo value(metadata) | jq -c . | sed -e 's/\"/\\\\\"/g' -e \"s/'/''/g\"",
            "cat ${packageDir}/sql/insert.sql | sed -e 's/TABLE_NAME/${repository}/g' | sed -e 's/KEY/${key}/g' | sed -e 's/JSON_DATA/${data}/g' | sed -e 's/METADATA/${metadata_escaped}/g' > /tmp/insert.sql",
            "sqlite3 ${db} < /tmp/insert.sql",
            "rm -f /tmp/insert.sql /tmp/data.json /tmp/input.json /tmp/raw_input.json",
            "log:${key}"
          ],
          "help": {
            "text": "Write to the aux4 repository",
            "variables": [
              {
                "name": "db",
                "text": "The database to write to",
                "default": ".local.db"
              },
              {
                "name": "repository",
                "text": "The name of the repository to write to",
                "arg": true
              },
              {
                "name": "id",
                "text": "The id to write to the repository",
                "default": ""
              },
              {
                "name": "data",
                "text": "The data to write to the repository (JSON string)",
                "default": ""
              },
              {
                "name": "metadata",
                "text": "Optional metadata to store with the record",
                "default": "{}"
              }
            ]
          }
        },
        {
          "name": "read",
          "execute": [
            "aux4 repository init --db ${db} --repository ${repository}",
            "nout:if(id) && echo \"SELECT id, data, metadata, created_at, updated_at FROM ${repository} WHERE id = value(id)\" || echo \"SELECT id, data, metadata, created_at, updated_at FROM ${repository}\"",
            "set:sql=${response}",
            "sqlite3 -json ${db} \"${sql}\" | jq 'map(. as $row | ({\"id\": $row.id} + ($row.data | fromjson)) + {\"$metadata\": (($row.metadata | fromjson) + {\"createdAt\": $row.created_at, \"updatedAt\": $row.updated_at})})'"
          ],
          "help": {
            "text": "Read from the aux4 repository",
            "variables": [
              {
                "name": "db",
                "text": "The database to read from",
                "default": ".local.db"
              },
              {
                "name": "repository",
                "text": "The name of the repository to read from",
                "arg": true
              },
              {
                "name": "id",
                "text": "The id to read from the repository",
                "default": ""
              }
            ]
          }
        },
        {
          "name": "find",
          "execute": [
            "aux4 repository init --db ${db} --repository ${repository}",
            "sqlite3 -json ${db} \"SELECT data FROM ${repository} WHERE CAST(json_extract(data, '$.${field}') AS TEXT) ${op} value(term)\" | jq 'map(.data | fromjson)'"
          ],
          "help": {
            "text": "Find in the aux4 repository",
            "variables": [
              {
                "name": "db",
                "text": "The database to find in",
                "default": ".local.db"
              },
              {
                "name": "repository",
                "text": "The name of the repository to find in",
                "arg": true
              },
              {
                "name": "field",
                "text": "The field to search for in the repository"
              },
              {
                "name": "op",
                "text": "The comparison operator to use (e.g., =, <>, <, >, <=, >=, like)",
                "default": "="
              },
              {
                "name": "term",
                "text": "The term to search for in the field"
              }
            ]
          }
        },
        {
          "name": "delete",
          "execute": [
            "aux4 repository init --db ${db} --repository ${repository}",
            "sqlite3 ${db} \"DELETE FROM ${repository} WHERE id = value(id)\""
          ],
          "help": {
            "text": "Delete from the aux4 repository",
            "variables": [
              {
                "name": "db",
                "text": "The database to delete from",
                "default": ".local.db"
              },
              {
                "name": "repository",
                "text": "The name of the repository to delete from",
                "arg": true
              },
              {
                "name": "id",
                "text": "The id to delete from the repository"
              }
            ]
          }
        },
        {
          "name": "truncate",
          "execute": [
            "confirm:Are you sure you want to truncate the repository '${repository}'? This will delete all records.",
            "aux4 repository init --db ${db} --repository ${repository}",
            "sqlite3 ${db} \"DELETE FROM ${repository}\""
          ],
          "help": {
            "text": "Truncate the aux4 repository (delete all records)",
            "variables": [
              {
                "name": "db",
                "text": "The database to truncate",
                "default": ".local.db"
              },
              {
                "name": "repository",
                "text": "The name of the repository to truncate",
                "arg": true
              }
            ]
          }
        }
      ]
    }
  ]
}
